// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: token.sql

package model

import (
	"context"

	"github.com/google/uuid"
)

const insertToken = `-- name: InsertToken :one
INSERT INTO token(token ,expires_at ,user_id ) VAlUES ($1, $2, $3) RETURNING token, expires_at, user_id
`

type InsertTokenParams struct {
	Token     string    `json:"token"`
	ExpiresAt int32     `json:"expires_at"`
	UserID    uuid.UUID `json:"user_id"`
}

func (q *Queries) InsertToken(ctx context.Context, arg InsertTokenParams) (Token, error) {
	row := q.db.QueryRow(ctx, insertToken, arg.Token, arg.ExpiresAt, arg.UserID)
	var i Token
	err := row.Scan(&i.Token, &i.ExpiresAt, &i.UserID)
	return i, err
}
