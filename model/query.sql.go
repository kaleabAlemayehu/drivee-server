// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package model

import (
	"context"
)

const listOwner = `-- name: ListOwner :many
SELECT (id, first_name, middle_name, last_name, email, phone_number,account_number, bank_name) FROM owner
ORDER BY email
`

func (q *Queries) ListOwner(ctx context.Context) ([]interface{}, error) {
	rows, err := q.db.Query(ctx, listOwner)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []interface{}
	for rows.Next() {
		var column_1 interface{}
		if err := rows.Scan(&column_1); err != nil {
			return nil, err
		}
		items = append(items, column_1)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
